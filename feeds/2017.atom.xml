<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Eli Heuer’s Blog - 2017</title><link href="https://elih.blog/" rel="alternate"></link><link href="https://elih.blog/feeds/2017.atom.xml" rel="self"></link><id>https://elih.blog/</id><updated>2017-04-23T00:00:00-05:00</updated><entry><title>Variable Font Test</title><link href="https://elih.blog/variable-font-test.html" rel="alternate"></link><published>2017-04-23T00:00:00-05:00</published><updated>2017-04-23T00:00:00-05:00</updated><author><name>Eli Heuer</name></author><id>tag:elih.blog,2017-04-23:/variable-font-test.html</id><summary type="html">&lt;p&gt;After watching Adam Twardoch's &lt;a class="reference external" href="https://www.youtube.com/watch?v=l9xTa-qfR6o"&gt;talk on variable fonts&lt;/a&gt;  at TYPO Labs 2017, I made my first simple experiment. I decided to start with the Arabic glyph &amp;quot;ب&amp;quot; (beh, Unicode 0628). Below is the result, rendered with &lt;a class="reference external" href="http://superpolator.com/"&gt;Superpolator&lt;/a&gt;:&lt;/p&gt;
&lt;img alt="variable ب" src="images/variable-font-test/demo.gif" /&gt;
&lt;p&gt;The repo with the &lt;a class="reference external" href="http://unifiedfontobject.org/"&gt;UFO&lt;/a&gt; and Superpolator .designspace file is on GitHub &lt;a class="reference external" href="https://github.com/eliheuer/arabic-variable-font-test"&gt;here …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;After watching Adam Twardoch's &lt;a class="reference external" href="https://www.youtube.com/watch?v=l9xTa-qfR6o"&gt;talk on variable fonts&lt;/a&gt;  at TYPO Labs 2017, I made my first simple experiment. I decided to start with the Arabic glyph &amp;quot;ب&amp;quot; (beh, Unicode 0628). Below is the result, rendered with &lt;a class="reference external" href="http://superpolator.com/"&gt;Superpolator&lt;/a&gt;:&lt;/p&gt;
&lt;img alt="variable ب" src="images/variable-font-test/demo.gif" /&gt;
&lt;p&gt;The repo with the &lt;a class="reference external" href="http://unifiedfontobject.org/"&gt;UFO&lt;/a&gt; and Superpolator .designspace file is on GitHub &lt;a class="reference external" href="https://github.com/eliheuer/arabic-variable-font-test"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;div class="youtube youtube-16x9"&gt;&lt;iframe src="https://www.youtube.com/embed/l9xTa-qfR6o" allowfullscreen seamless frameBorder="0"&gt;&lt;/iframe&gt;&lt;/div&gt;</content><category term="TruFont"></category><category term="Arabic"></category></entry><entry><title>TruFont Worklog: 02 Shapes Tool</title><link href="https://elih.blog/trufont-worklog-002.html" rel="alternate"></link><published>2017-04-05T00:00:00-05:00</published><updated>2017-04-05T00:00:00-05:00</updated><author><name>Eli Heuer</name></author><id>tag:elih.blog,2017-04-05:/trufont-worklog-002.html</id><summary type="html">&lt;p&gt;I'm learning the &lt;a class="reference external" href="https://trufont.github.io/"&gt;TruFont&lt;/a&gt; codebase and trying to find a way to make my first contribution. One Idea I had was to replicate the shapes tool that &lt;a class="reference external" href="http://doc.robofont.com/extensions/download-extensions/shapes-tool/"&gt;RoboFont&lt;/a&gt; has. I have recorded a few screencast of me working on the problem:&lt;/p&gt;
&lt;div class="youtube youtube-16x9"&gt;&lt;iframe src="https://www.youtube.com/embed/1FTamVn23to" allowfullscreen seamless frameBorder="0"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;div class="youtube youtube-16x9"&gt;&lt;iframe src="https://www.youtube.com/embed/MR8_IH-p-Pw" allowfullscreen seamless frameBorder="0"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;div class="youtube youtube-16x9"&gt;&lt;iframe src="https://www.youtube.com/embed/Hde_KaTo8Dk" allowfullscreen seamless frameBorder="0"&gt;&lt;/iframe&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;I'm learning the &lt;a class="reference external" href="https://trufont.github.io/"&gt;TruFont&lt;/a&gt; codebase and trying to find a way to make my first contribution. One Idea I had was to replicate the shapes tool that &lt;a class="reference external" href="http://doc.robofont.com/extensions/download-extensions/shapes-tool/"&gt;RoboFont&lt;/a&gt; has. I have recorded a few screencast of me working on the problem:&lt;/p&gt;
&lt;div class="youtube youtube-16x9"&gt;&lt;iframe src="https://www.youtube.com/embed/1FTamVn23to" allowfullscreen seamless frameBorder="0"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;div class="youtube youtube-16x9"&gt;&lt;iframe src="https://www.youtube.com/embed/MR8_IH-p-Pw" allowfullscreen seamless frameBorder="0"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;div class="youtube youtube-16x9"&gt;&lt;iframe src="https://www.youtube.com/embed/Hde_KaTo8Dk" allowfullscreen seamless frameBorder="0"&gt;&lt;/iframe&gt;&lt;/div&gt;</content><category term="TruFont"></category></entry><entry><title>TruFont Worklog: 01 Getting Started</title><link href="https://elih.blog/trufont-worklog-001.html" rel="alternate"></link><published>2017-04-02T00:00:00-05:00</published><updated>2017-04-02T00:00:00-05:00</updated><author><name>Eli Heuer</name></author><id>tag:elih.blog,2017-04-02:/trufont-worklog-001.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="https://trufont.github.io/"&gt;TruFont&lt;/a&gt; is a cross-platform &lt;a class="reference external" href="http://unifiedfontobject.org/"&gt;UFO&lt;/a&gt; font editor. I made a screencast going over how to get a development environment set up:&lt;/p&gt;
&lt;div class="youtube youtube-16x9"&gt;&lt;iframe src="https://www.youtube.com/embed/KAvHuFZSQgQ" allowfullscreen seamless frameBorder="0"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;p&gt;I plan to do more videos like this, next I'll probably try making a simple rectangle drawing tool.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="https://trufont.github.io/"&gt;TruFont&lt;/a&gt; is a cross-platform &lt;a class="reference external" href="http://unifiedfontobject.org/"&gt;UFO&lt;/a&gt; font editor. I made a screencast going over how to get a development environment set up:&lt;/p&gt;
&lt;div class="youtube youtube-16x9"&gt;&lt;iframe src="https://www.youtube.com/embed/KAvHuFZSQgQ" allowfullscreen seamless frameBorder="0"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;p&gt;I plan to do more videos like this, next I'll probably try making a simple rectangle drawing tool.&lt;/p&gt;
</content><category term="TruFont"></category></entry><entry><title>Tk Calligraphy: Work Log 1</title><link href="https://elih.blog/tk-calligraphy.html" rel="alternate"></link><published>2017-03-27T00:00:00-05:00</published><updated>2017-03-27T00:00:00-05:00</updated><author><name>Eli Heuer</name></author><id>tag:elih.blog,2017-03-27:/tk-calligraphy.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="https://docs.python.org/3/library/tk.html"&gt;Tkinter&lt;/a&gt; is a cross-platform GUI toolkit and part of the Python Standard Library. It comes pre-installed with Python for MacOS and Windows. If you are using a Debian based version of GNU+Linux like Ubuntu, it can be installed from the terminal:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;sudo apt-get install python3-tk&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A Tkinter hello world …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="https://docs.python.org/3/library/tk.html"&gt;Tkinter&lt;/a&gt; is a cross-platform GUI toolkit and part of the Python Standard Library. It comes pre-installed with Python for MacOS and Windows. If you are using a Debian based version of GNU+Linux like Ubuntu, it can be installed from the terminal:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;sudo apt-get install python3-tk&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A Tkinter hello world program looks like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;Tkinter&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;root&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;helloWorld&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Label&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Hello, world!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;helloWorld&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Save the above code sample as &lt;cite&gt;hello-world.py&lt;/cite&gt; and from a terminal in the same directory run:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;python3 hello-world.py&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And just like that, we have a cross-platform desktop application!&lt;/p&gt;
&lt;p&gt;Tkinter is simple, fast, and has pleanty of &lt;a class="reference external" href="https://wiki.python.org/moin/TkInter"&gt;documentation&lt;/a&gt;. There are other ways to create cross-platform desktop applications with Python, notably &lt;a class="reference external" href="https://riverbankcomputing.com/software/pyqt/intro"&gt;Qt&lt;/a&gt;, &lt;a class="reference external" href="https://kivy.org/"&gt;Kivy&lt;/a&gt; and &lt;a class="reference external" href="https://www.wxwidgets.org/"&gt;wxWidgets&lt;/a&gt;. But all these frameworks add complexity to the project and make it more difficult for other programmers to contribute to. So, I wanted to learn more about Tkinter, and building a simple paint program seemed like a good place to start. I started with refactoring the code from &lt;a class="reference external" href="https://funpython.wordpress.com/2015/11/08/simple-drawing-program-part-1/"&gt;this blog post&lt;/a&gt;, and after a bit of work I had the beginings of a Calligraphy application.&lt;/p&gt;
&lt;img alt="tk-calligraphy" src="images/tk-calligraphy/tk-calligraphy-screenshot-01.png" /&gt;
&lt;p&gt;The GitHub repo for this project can be found &lt;a class="reference external" href="https://github.com/eliheuer/tk-calligraphy"&gt;here&lt;/a&gt;. My main goal for Tk Calligraphy is to have brushes designed spcifically for Arabic and Hiragana and to have suport for pressure sensitive drawing tablets.&lt;/p&gt;
</content><category term="Calligraphy"></category><category term="Python"></category></entry><entry><title>Hello World</title><link href="https://elih.blog/hello-world.html" rel="alternate"></link><published>2017-02-07T00:00:00-05:00</published><updated>2017-02-07T00:00:00-05:00</updated><author><name>Eli Heuer</name></author><id>tag:elih.blog,2017-02-07:/hello-world.html</id><summary type="html">&lt;p&gt;Hello world, welcome to my blog! Here is a Fibonacci sequence generator in Python, a test of the syntax highlighter &lt;a class="reference external" href="http://pygments.org/"&gt;Pygments&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;fibonacci&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;
    &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;

&lt;span class="c1"&gt;# Display the first 15 Fibonacci numbers.&lt;/span&gt;
&lt;span class="k"&gt;for …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Hello world, welcome to my blog! Here is a Fibonacci sequence generator in Python, a test of the syntax highlighter &lt;a class="reference external" href="http://pygments.org/"&gt;Pygments&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;fibonacci&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;
    &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;

&lt;span class="c1"&gt;# Display the first 15 Fibonacci numbers.&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fibonacci&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</content><category term="HelloWorld"></category></entry></feed>